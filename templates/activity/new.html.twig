{% extends 'base.html.twig' %}

{% block title %}New Activity{% endblock %}

{% block body %}
<div class="title">
    <h1>Créer une sortie</h1>
</div>
<div class="container">
    <div class="left col-6">
        {{ form_start(form, {'attr': {'id': 'activity_form'}}) }}
        {{ form_row(form.name) }}
        {{ form_row(form.startDate) }}
        {{ form_row(form.endDate) }}
        {{ form_row(form.maxInscriptions) }}
        {{ form_row(form.duration) }}
        {{ form_row(form.description) }}
    </div>
    <div class="right">
        {{ form_row(form.site) }}
        {{ form_row(form.cities) }}
        {{ form_row(form.places) }}
        {{ form_row(form.placeStreet) }}
        {{ form_row(form.submit) }}
        {{ form_end(form) }}
    </div>
</div>



    <a href="{{ path('app_activity_index') }}"/>Retour aux activités</div>
{% endblock %}

{% block javascripts %}
    <script>
        window.onload = () => {
            let city = document.querySelector("#activity_cities");
            let placeSelect = document.querySelector("#activity_places");
            let rueInput = document.querySelector("#activity_placeStreet");

            city.addEventListener("change", function () {
                let form = document.querySelector("#activity_form");
                let data = this.name + "=" + this.value;

                fetch(form.action, {
                    method: form.getAttribute("method"),
                    body: data,
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded; charset:UTF-8"
                    }
                })
                .then(response => response.text())
                .then(html => {
                    let content = document.createElement('html');
                    content.innerHTML = html;
                    let nouveauPlaceSelect = content.querySelector("#activity_places");
                    placeSelect.replaceWith(nouveauPlaceSelect);
                    placeSelect = nouveauPlaceSelect;

                    // Add change event listener to the new select element
                    placeSelect.addEventListener("change", function () {
                        let selectedOption = this.options[this.selectedIndex];
                        let placeId = selectedOption.value;

                        // Make a request to retrieve the placeStreet based on the selected placeId
                        fetch('get-place-street/' + placeId)
                            .then(response => response.text())
                            .then(placeStreet => {
                                rueInput.value = placeStreet; // Set the value of rueInput
                            });
                    });
                });
            });
        };
    </script>
{% endblock %}
